echo "---------- Killing all containers and pruning system"
docker stop -t 0 $(docker ps -a -q); docker rm $(docker ps -a -q);
docker system prune -f

echo "---------- Creating orals-net unless exists"
docker network create --driver bridge orals-net > /dev/null  2>&1

echo "---------- Building base image"
docker build --pull -t orals-dev -f Dockerfile-base --build-arg rails_env=development .

echo "---------- Building then running orals-dev-db container"
docker pull postgres
docker run -d \
  --network orals-net \
  -p 5432:5432 \
  -e POSTGRES_PASSWORD=not_so_secret \
  --mount type=volume,source=orals-dev-db,target=/var/lib/postgresql/data \
  --name orals-dev-db postgres:13

echo "---------- Building then running orals-dev-app container"
docker build -t orals-dev-app -f Dockerfile-dev-app --build-arg rails_env=development .
rm -f tmp/pids/server.pid
docker run -d \
  --network orals-net \
  -p 3000:3000 \
  -e RAILS_ENV=development \
  --mount type=bind,source="$(pwd)",target=/app \
  --name orals-dev-app \
  orals-dev-app:latest


echo "---------- Building then running orals-dev-jobs container"
docker build -t orals-dev-jobs -f Dockerfile-dev-jobs --build-arg rails_env=development .
docker run -d \
  --network orals-net \
  -e RAILS_ENV=development \
  --mount type=bind,source="$(pwd)",target=/app \
  --name orals-dev-jobs orals-dev-jobs:latest

echo 
echo "App is up and available at 127.0.0.1:3000"
echo 
