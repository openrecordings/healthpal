#play-view
  #recording-header
    - title = format_date @recording.created_at
    - title += " Visit with #{@recording.provider}" if @recording.provider
    %h3= @recording.user.full_name
    %h4= title

  #player-controls
    #recording-container{'data-file' => @recording.id}
    %p
      %div.row.player
        %time#timer
          00:00
        %div.timebar
          %div#timerbar
            %span#loc.glyphicon.glyphicon-chevron-down
        %time#timer-end
          00:00
      %div#media-controls.btn-group
        %button#stepbackward.btn.btn-primary= image_tag 'rewind10_white.svg', size: 30
        %button#playaudio.btn.btn-primary
          #play-pause-text Play
          %span#play-pause-icon.glyphicon.glyphicon-play
        %button#stepforward.btn.btn-primary= image_tag 'forward10_white.svg', size: 30
    - unless Rails.application.config.research_mode
      #tag-filters
        - (@tags.flat_map{|x| x[1].map {|y| y.tag_type.label}}).sort.uniq.each do |tag_label|
          - filter_html = "#{tag_label}<input class='badgebox' id='Diagnosis' type='checkbox'><span class='badge'>&check;</span></input>".html_safe
          =link_to filter_html, 'javascript:;', class: 'filter oralfilter-' + tag_label[0..2].downcase + ' tag-toggle btn-tag btn', data: {tnum: tag_label}
        %a#clear-filters Clear Filters
        %br
        %a#filter-help-link What are these buttons for?
        #filter-help
          = render partial: 'filter_help'

  #player-tag-table
    %table.table
      %thead
        %tr
          %th Start time
          %th Tags
          %th Links to more information
        %tbody
          - @tags.each do |utag|
            %tr.segment{data: {starttime: utag[0].begins_at, endtime: utag[0].ends_at}}
              %td
                = mm_ss(utag[0].begins_at)
              %td
                - utag[1].each do |tag|
                  %div.tag{class: 'oralfilter-' + tag.tag_type&.label[0..2].downcase} #{tag.tag_type&.label}
              %td.do-not-seek
                -# TODO: Make this real and remove mock content
                - links = @links.select{|l| l[3] == utag[0].id}
                - links.each do |l|
                  = link_to l[1] + (l == links.last ? '' : ','), l[2], target: '_blank'

  #player-sidebar
    %ul.nav.nav-list
      %li.nav-header Filters
      %li= link_to "Link 1", "/path1"
      %li= link_to "Link 2", "/path2"
      %li= link_to "Link 3", "/path3"
